# -*- coding: utf-8 -*-
"""RANSAC_CLEAN_TRAINING.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tFoS_uMOG6M3HA8fpIhSxCKc6QcIF9KK
"""

from tensorflow import keras
import matplotlib.pyplot as plt
import tensorflow as tf
import tensorflow_hub as hub
from tensorflow.keras.datasets import cifar10
import os
os.environ["CUDA_DEVICE_ORDER"] = "PCI_BUS_ID"
os.environ["CUDA_VISIBLE_DEVICES"] = "6"  # (xxxx is your specific GPU ID)

(trainX, trainY), (testX, testY) = cifar10.load_data()

# Normalize pixel values to be between 0 and 1
trainX, testX = trainX / 255.0, testX / 255.0

# flatten the label values
trainY, testY = trainY.flatten(), testY.flatten()

#load pretrained model
cleanModel = tf.keras.Sequential([hub.KerasLayer("https://tfhub.dev/deepmind/ganeval-cifar10-convnet/1", trainable=True)])

# model description
# model.summary()

# Compile
cleanModel.compile(
    optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])

# Fit
r = cleanModel.fit(trainX, trainY, epochs=20)

# obtain results
upperBoundAccuracy = cleanModel.evaluate(testX, testY)[1]

print('The clean model has an accuracy of',
      upperBoundAccuracy, 'on the testing data.')

# #save model
# cleanModel.save('ransac_clean.h5')
