# -*- coding: utf-8 -*-
"""RANSAC_CLEAN_TRAINING.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tFoS_uMOG6M3HA8fpIhSxCKc6QcIF9KK
"""

from tensorflow.keras import losses
from cifar10_clean_utils import *
from tensorflow import keras
import matplotlib.pyplot as plt
import tensorflow as tf
import tensorflow_hub as hub
from tensorflow.keras.datasets import cifar10
import os
os.environ["CUDA_DEVICE_ORDER"] = "PCI_BUS_ID"
os.environ["CUDA_VISIBLE_DEVICES"] = "6"  # (xxxx is your specific GPU ID)

# get data
cifar10_data = CIFAR10Data()
trainX, trainY, testX, testY = cifar10_data.get_data(subtract_mean=True)

# load pretrained model
cleanModel = tf.keras.models.load_model(
    '../Pre Training/cifar100_pretrain_model.h5')

# model description
# model.summary()

# Compile
lr = 1e-1
opt = tf.keras.optimizers.SGD(lr=lr, momentum=0.9, nesterov=False)

cleanModel.compile(
    optimizer=opt, loss=losses.categorical_crossentropy, metrics=['accuracy'])

# Fit
r = cleanModel.fit(trainX, trainY, epochs=20)

# obtain results
upperBoundAccuracy = cleanModel.evaluate(testX, testY)[1]

print('The clean model has an accuracy of',
      upperBoundAccuracy, 'on the testing data.')

# #save model
# cleanModel.save('ransac_clean.h5')
